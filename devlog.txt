Dagbok

Det fungerar, men man måste starta om Telit var gång.
Det dyker upp en del skräp tecken dock

Ett problem som kvarstår är att minnet inte räcker för att ta emot svaret, behöver skapa en minnes effektiv mottagare som bara läser in chunks och sparar undan bara en liten del, det som är viktigt

GIT
git commit -m "Added yaml output" app/controllers/measures_controller.rb 
git push heroku master


För att se vad som skickas kan samma göras med curl:
curl -H "Accept: text/xml" -X POST -d "measure[speed]=12" -d "measure[direction]=435" -H "Host: remote-wind.heroku.com:80" "http://localhost:2000/measures/"

curl -H "Accept: text/xml" -X POST -d "measure[speed]=12" -d "measure[direction]=435" -H "Host: remote-wind.heroku.com:80" "http://78.79.166.71:2000/measures/"


utan att gå igenom sockspy
curl -H "Accept: text/xml" -X POST -d "measure[speed]=12" -d "measure[direction]=435" "http://remote-wind.heroku.com/measures/"


2011-10-02
Gjorde om en del men det var inte helt tillräckligt. catchTelitData skriver över första datan ifall man sätter ned mottagar bufferten så den fungerar inte som minneseffektiv. Måste istället skapa en helt ny funktion som läser rad för rad och letar i varje efter en specifik str. Returnera när den är hittad.

Det kvarstår ett problem med att förbindelsen inte går att återskapa igen utan man måste starta om Telit.

2011-10-09 fixade en ny funktion som läser rad för rad o jmf ifall det är den response man letar efter typ, HTTP/1.1 200 OK
Fungerar men enheten bootar om efter en stunds läsande av datan från serieporten

2011-10-16 Fixat ombootningen, malloc funkar inte. Fick sänka baudraten till 1200 baud för att läsa all data men då funkar det bra
 Började lägga till en parseYAMLResponse som skall döpas om till JSON för det är det den kommer läsa
 - har fixat i rails så den svarar på yaml/json anrop

curl -H "Accept: text/yaml" -X GET -H "Host: remote-wind.heroku.com:80" "http://localhost:2000/measures/1"
{"id":1,"speed":121.0,"dir":32.0,"st_id":null}
eller

curl -H "Accept: application/json" -X GET -H "Host: remote-wind.heroku.com:80" "http://localhost:2000/measures/1"
{"measure":{"created_at":"2011-09-11T18:33:30Z","direction":32.0,"id":1,"speed":121.0,"station_id":null,"updated_at":"2011-09-11T18:33:30Z"}}

2011-10-25
Lödat in sensorena. De två mitten pinnarna kopplade till vindmätaren(omkrets ca 44cm). De två yttre till riktnings mätarn(1k,2k,4k,8k,16k,32k,56k,112k).

Av de inre(hastighet) är ena kopplad till jord och andra pulluppad med 10K och kopplad mot D10. Av de yttre är ena kopplad till jord och den andra är kopplad till en spänningsbrygga. 12k ohm mot 5V och andra delen in mot sensorn, mitt punkten kopplad mot A0

2011-11-02
Fixat koden som mäter sensorerna. Vindhastigheten i cm/s och riktningen i 3600 grader per varv. För att få lite precision över till REST anropen.

2011-11-14
Efter en massa strul med att aktivera kontexten och därmed komma online o få IP nummer så ändrade jag om så att seria kommen sker via HW serieporten o debuggningen via mjukvaryversionen
Detta behövs för att kontexten skall gå att aktiver
ATZ
AT#BND=0
AT&K0
AT+CMEE=2
AT+CGDCONT=1,"IP","online.telia.se","0.0.0.0"
AT#SCFG=1,1,300,90,60,5
AT#SGACT=1,1
Upptäckte att oftast när det blir fel beror det på att kontexten redan är aktiv

2011-11-26
gjort om formatet den skickar ut med, mkt kompaktare nya. la till min/max värden samt temperatur

Kollade hur mkt data som skickas. Utgående är max 63 och mottagningen är ca 421 byte så ca 500 per postning, blir ca 3 kr om dagen då Telia tar 20 kr per MB

2011-11-28
La till Flot för graferna och la in min/max

2011-12-11
Verkar som Telias debitering inte stämmer med vad de angett. Enligt Telia skall det kosta 2.80 kr per dag om jag skickar 140 kb per dag. Laddad 50 kr den 26 eller 27 nov och den 8:e dec vid 17:50 slutade postningar gå igenom, det är nästan 11 eller 12 dygn vilket skulle ge att det kostar snarare 4.55 eller 4.15 per dag. Inte jättestor skillnad om man ser till totala per dag men där är ändå 50% mer än vad det borde enligt beräkningar.

Laddade idag kl 18:00 75 kr på saldot. Om kostnaden är 4.55 per dag så bör dessa pengar vara slut på morgonen den 28:e december.

Testade också att läsa in data från trafikverket och det fungerar fint:
curl --user "YellowOrb:DatexYellowOrb#" "https://datex.vv.se/d2clientpull/weatherdataserviceBA/WeatherDataService.asmx?op=getDatex2Data" -d @datexWeather.txt -H "SOAPAction: "http://datex2.eu/wsdl/clientPull/1_0/getDatex2Data"" -H "Content-Type: text/xml; charset=utf-8" 

Det man måste göra dock för att få stationsnamnen samt deras positioner är att man måste läsa in https://datex.vv.se/d2clientpull/metadataBA2/MeasurementSiteTablePublication_WeatherPostsService.asmx 

För att få det fungera bra med rails verkar tipset att använda Savon https://github.com/rubiii/savon
 
2012-01-31
Börjat bygga en klass för SIM900 modulen. Ändrat om designen en del. Skapat en ATBasedDevice klass för hantera AT kommunikation mot en serieport. Kommer skapa ett interface för GPRS devicer, som sedan SIM900 kan implementera och sedan som kan användas av RESTClient.

2012-02-05
Tittade lite på hur man skulle kunna göra ett snyggt lib av det hela och möjligt man kan anv denna HTTP klient istället - http://interactive-matter.eu/how-to/arduino-http-client-library/

2012-03-25
Läst på lite om SIM900, enklast verkar vara köra den i none-transparent mode för TCP/IP, då är det väldigt lite att konfa för att få upp en förbindelse
openTCPConnection()
write/print
read response
closeTCPConnection() 

2012-05-17
Fixat så att de gamla Telit klasserna är helt omskrivna och nu fungerar med SIM900. libraries/RESTClient heter libbet just nu
det som fungerar nu är att skicka AT kommandon o tolka responsen, sett lite skräptecken så går kanske lite för fort
Arduino projektet är RemoteWindClient_Arduino1_0_SIM900
Det som skall fixas tll nu är att koden i sim900GPRS blir korrekt, så att man kan:
if(isGPRSAvailable()) {
	setupGPRSContext();
	openTCPIPSocket("www.server.com", 80);
	startDataTransmission()
	// write all the infor to the server like a HTTP GET call
	stopDataTransmission()
	closeTCPIPSocket();
}

2012-05-19
Skrev sim900gprs och ser ut att vara klar, dock otestad. Fixa till en ny variant av RESTCLient som i varje ret anrop gör:
openTCPIPSocket()
startDataTransmission()
write ... 
stopDataTransmission()
parsaYamlResponse eller vad förväntas...
om inte avlsutas med CLOSE gör closeTCPSocket()

2012-05-20
Fått ett enkelt HTTP GET att fungera mot heroku servern!! Dock var lurigt att få till TCPIPSocketOpen att funka. Vet inte varför men måste göra en AT+CIPSHUT innan jag ansluter! Men det funkar....

2012-05-21
Började på att göra iordning REST delen. Skrivit en test samt börjat anpassa klassen, inte klart

2012-05-22
REST fungerar att läsa med GET så även POST bör fungera, nästa steg är att testa hela vindmätarn

2012-05-23
Fixade till så att både post och get fungerar, både i client o på server. Hittade ett antal buggar samt Arduino clienten nu hanterar HTTP responskoderna.
curl -H "Accept: text/yaml" -H "application/x-www-form-urlencoded" -X POST -H "Host: remote-wind.heroku.com:80" "http://remote-wind.heroku.com:80/stations/" -d "station[hw_id]=899" -v

curl -H "Accept: text/yaml" -H "application/x-www-form-urlencoded" -X POST -H "Host: remote-wind.heroku.com:80" "http://localhost:3000/measures/" -d "m[s]=0&m[d]=426&m[i]=7&m[max]=0&m[min]=0" -v
 
curl -H "Accept: text/yaml" -X GET -H "Host: remote-wind.heroku.com:80" "http://remote-wind.heroku.com:80/stations/" -v

2012-05-24
Nu fungerar koden och postar data till servern igen
- måste fixa korrekta vindvärden

Borde lägga till define för att stänga av debuggning. Arduino koden bör vara så gott som helt klar. Möjligen behöver spara ihop mer RAM
Fixa metoder för att slå på o stänga av GSMmodulen.
- lägg till metod för att registrera påslagning, alt läsa config värden
- kommentera att responsbuffer går bra att anv för att skriva post parametrar o dyl

2012-05-27
Fixat så att alla utskrifter sker via macron så man kan stänga av dem
Hittade fel i max/min beräkningar samt skalat dessa så att medlet som räknas ut i princip har två decimaler(ggr 100)
Beräknar min/max medel över 10 sekunder för att få mer variation

2012-05-28
TurnOn och TurnOff fungerar, fixade kod för att läsa av saldo på abonnemang

2012-05-30
Fixat till generisk rutin för att läsa saldo samt lagt in kod i enheten så den rapporterar saldo en gång per dygn

TODO:
Arduino:
- lägg till flush() efter utskrifter till enheten

- optimera energiförbrukning, testa o det funkar bra att stänga av GSM mellan varje data skickning

- lägg till funktion som kan läsa batterinivå - svårt, kräver ny hårdvara

- kolla vad som händer om man inte klarar regga/hitta id för station?

Rails app
- lägg till admin, enda som kan redigera(update) stations och deleta stations samt measures

- optimera ned mängden data som skickas och tas emot än mer
 - kort-url? Ändra station och measuers urlar etc så att de bara blir en bokstav?

- gör ett enkelt conf protokoll som läser in vid start hur ofta den skall rapportera olika varianter av data samt kanske hur ofta den skall läsa om confen

- fixa till ngn typ av enkel autentisering, varje enhet får en nyckel den gång den registrerar sig som sparas i flash, kan bara skicka in nya mätvärden med denna, dock måste vara rätt kort, typ 5 tecken(alphanum), men räcker rätt väl i kombination med id:t, men dock rätt lätt att bruteforca

- skapa iphone/android vy, grapher, swipe höger ger lista med värden, kartan fylla skärmen

- ändra kartan till att anv terrain samt skapa nya markörer


2012-08-20
Created branch issue5
Updated to rails 3.0.17 and then to 3.1.8 - http://railscasts.com/episodes/282-upgrading-to-rails-3-1?view=asciicast

removed 
# JavaScript files you want as :defaults (application.js is always included).
config.action_view.javascript_expansions[:defaults] = %w(jquery.min rails geo jquery.flot.min jquery.flot.fillbetween)
from application.rb in config

2012-08-21
Added devise, model user - simple can sign up, logout etc.
No verification of e-mail yet

2012-08-26
Added CanCan. Added Roles and an SuperAdmin in the dev db.

2012-09-09
Added missing controller for session management now with cancan active.
Also added two new users, karl-petter@yelloworb.com and kalle@yelloworb.com
Also made the first SuperAdmin.
- rails c
- kp = User.find_by_email('karl-petter@yelloworb.com')
- kp.roles << Role.find_by_name(:superadmin)
- kp.save!

created a gmail account to send out mail from yelloworbwebapp@gmail.com, same password as webapp@yelloworb.com
Tried to add invitations https://github.com/scambra/devise_invitable but it crashes when creating a new station without setting owner from dropdown

2012-09-14
The invitation system works. Only SuperAdmin can invite new users.
At the moment this is only accessible through new station-registrations. Admin selects an existing user or enters a new e-mail. If user does not exist an invitation is sent out. Otherwise the station is just added to the user. It is also possible to just invite a user using the path users/invitation/new without creating a station.

2012-09-16
Fixed an issue with Flot and the order of javascript files in application.js
Started to work on admin functions such as assign an existing user to an existing station, last thing done was to try to make a delete from the user just remove the station as his/her and only allow admin to actually delete

2012-09-18
Added function to clear measures from a station - can be improved..

TODO:

start working on issue 5:
A user can edit position and name of his/her stations
 - add to user has_many stations

An admin can edit any station
Add a not positioned flag? or will lat/lon be nil?

Add will_paginate Gem
Add a calendar to select a date to delete data older than that date

Add check of IMEI http://en.wikipedia.org/wiki/International_Mobile_Equipment_Identity

Add testing - guard and spork

- change so stations are identified by stationnames or IMEI rather than id number

